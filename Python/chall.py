from Crypto.Util.number import *
import itertools

p = 136166054217639352580171726327390603845688297496736665936437630644584754286734284564182009805449328639027806375518497013101791021422060324101218624871354722716966638214883665902617193664671643699584776399636759162572302551572767803525712732585973606274782263976993682268848048866810887021801623164376785147313
q = 150048699587287388411975277651026765045669779465740883668834474089800886045548581036940349221347220590588475133846674351319657105161385264055197042197913879470883995660088741213166938304355336415276806286250291020438859334961631785849399567712616456549487071390568286885289572772336592126166406810091587164989
n = p * q
e = 65537


def encrypt(n, secret):
    plaint = bytes_to_long(secret)
    chipper = pow(plaint, e, n)
    return chipper


def file(chipper):
    with open("output.txt", "w") as file:
        file.write("n = " + str(n))
        file.write("\ne = " + str(e))
        file.write("\nchipper = " + str(chipper))
        

c = encrypt(n, bytes("flag{This_is_a_fake_flag}", encoding="utf-8"))
file(c)

with open("hasil.txt", "w") as f:
    for combo in c:
        password = "".join(combo)
        f.write(password + "\n")